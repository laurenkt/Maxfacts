image: docker:latest

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-service
services:
    - mongo:3.2

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
    paths:
        - node_modules/

variables:
    DOCKER_DRIVER: overlay2
    DEPLOY_SERVER: lt696@maxfacts.york.ac.uk

before_script:
    - >
        apk add --update --no-cache
        automake
        git
        alpine-sdk 
        nasm 
        autoconf
        build-base
        zlib
        zlib-dev
        libpng
        libpng-dev
        libwebp
        libwebp-dev
        libjpeg-turbo
        libjpeg-turbo-dev
        yarn
        mongodb-tools
        openssh
        python
    - yarn global add node-gyp # Fixes optipng errors
    - yarn global add optipng-bin # Fixes optipng errors

stages:
    - test
    - deploy

build_and_test:
    stage: test
    script:
        # Stop env file missing error
        - cp .env.example .env
        - yarn install
        - node_modules/.bin/gulp
        - docker build -t maxfacts .
        # Sleep is to wait for container to be set-up and ready
        - docker exec $(docker run -d maxfacts; sleep 15) yarn run test:integrations

deploy:
    stage: deploy
    only:
        - schedules
    script:
          # Run ssh-agent (inside the build environment)
        - eval $(ssh-agent -s)
          # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
        - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 --decode)
        - ssh $DEPLOY_SERVER 'cd Maxfacts && git pull && npm run deploy'
